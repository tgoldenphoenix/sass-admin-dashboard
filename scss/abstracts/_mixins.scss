@use "sass:map";
@use "variables" as *;
@use "../layout/breakpoints" as *;


// Creating grid columns
@mixin grid($total, $number) {
  flex: 0 0 calc(100% / (#{$total} / #{$number}));// 100% / (12/3) = 100% / 4
  max-width: calc(100% / (#{$total} / #{$number}));
}

// Creating offset grid
@mixin offset-grid($total-cols, $responsive) {
  @if $responsive {
    @each $break, $value in $containers {
      @include respond(#{$break}) {
        @for $i from 1 through $total-cols {
          .e-offset-#{$break}-#{$i} {
            @if $i == $total-cols {
              // e-offset-12 is 100%, do not move the column
              margin-left: 0;
              flex: 0 0 100%;
              max-width: 100%;
            } @else {
              margin-left: calc(100% / (#{$total-cols} / #{$i}));
              flex: 0 0 calc(100% * ((#{$total-cols} - #{$i}) / #{$total-cols}));
              max-width: calc(100% * ((#{$total-cols} - #{$i}) / #{$total-cols}));
            }
          }
        }
      }
    }
  } @else {
    @for $i from 1 through $total-cols {
      .e-offset-#{$i} {
        @if $i == $total-cols {
          margin-left: 0;
          flex: 0 0 100%;
          max-width: 100%;
        } @else {
          margin-left: calc(100% / (#{$total-cols} / #{$i}));
          flex: 0 0 calc(100% * ((#{$total-cols} - #{$i}) / #{$total-cols}));
          max-width: calc(100% * ((#{$total-cols} - #{$i}) / #{$total-cols}));
        }
      }
    }
  }
}